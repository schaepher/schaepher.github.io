<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Installation And Configuration - 分类 - Schaepher's Blog</title><link>https://schaepher.github.io/categories/installation-and-configuration/</link><description>Installation And Configuration - 分类 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>schaepher@outlook.com (Schaepher)</managingEditor><webMaster>schaepher@outlook.com (Schaepher)</webMaster><lastBuildDate>Tue, 15 Oct 2019 13:21:44 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/categories/installation-and-configuration/" rel="self" type="application/rss+xml"/><item><title>Docker 镜像拉取失败的几种解决方法</title><link>https://schaepher.github.io/2019/10/15/docker-registry/</link><pubDate>Tue, 15 Oct 2019 13:21:44 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/15/docker-registry/</guid><description>方法总览： 国内源 nc + hosts Nginx 代理（需要 VPS） 官方 registry（需要 VPS，可缓存镜像） JFrog Artifactory（需要 VPS，可缓存镜像，需</description></item><item><title>CentOS7 编译 Git</title><link>https://schaepher.github.io/2019/10/09/git-compiling/</link><pubDate>Wed, 09 Oct 2019 19:26:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/09/git-compiling/</guid><description>1 2 3 4 5 yum install -y make autoconf gcc zlib-devel gettext-devel make config ./configure --prefix=/usr make all make install https://git-scm.com/book/en/v2/Getting-Started-Installing-Git</description></item><item><title>CentOS7 用户管理</title><link>https://schaepher.github.io/2019/10/07/centos-user-management/</link><pubDate>Mon, 07 Oct 2019 19:36:32 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/07/centos-user-management/</guid><description>基础操作 添加用户： useradd -m username -m 参数是为了给用户创建 home 目录。例如 /home/username 设置密码或修改密码： passwd username 用户加组： gpasswd -a username groupname 组移除用户： gpasswd -d username groupname 删除用户： userdel username 允许</description></item><item><title>CentOS7 NetworkManager 管理网络</title><link>https://schaepher.github.io/2019/10/07/centos-network/</link><pubDate>Mon, 07 Oct 2019 14:23:09 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/07/centos-network/</guid><description>工具 yum install -y NetworkManager-wifi 查看网卡状态 nmcli dev status 结果示例： 1 2 3 4 5 DEVICE TYPE STATE CONNECTION eth0 ethernet connected Wired connection 1 wlan0 wifi disconnected -- p2p-dev-wlan0 wifi-p2p disconnected -- lo loopback unmanaged -- 如果是 unavailable，则重启系统。 查看</description></item><item><title>Mariadb 配置</title><link>https://schaepher.github.io/2019/10/07/mariadb-replication/</link><pubDate>Mon, 07 Oct 2019 11:58:12 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/07/mariadb-replication/</guid><description>主从 官方文档 https://mariadb.com/kb/en/library/setting-up-replication/ 主从配置其实很简单。有以下几个步骤： 步骤 Primary Replica 1 开启 bin-log，设置服务器 ID，重启 Mariadb 2 设置服务器 ID，重启 Mariadb 3 创建 Replica 连接 Primary</description></item><item><title>Syncthing 通过网络同步文件</title><link>https://schaepher.github.io/2019/10/05/syncthing/</link><pubDate>Sat, 05 Oct 2019 20:46:17 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/05/syncthing/</guid><description>简介 Syncthing 是一款同步功能简洁但提供 P2P 功能的基于网络的多端（IOS除外）文件同步的开源软件。 要点 基于网络同步。不是用来将本机的某个硬盘同步到另一个</description></item><item><title>CentOS7 添加 Swap</title><link>https://schaepher.github.io/2019/09/19/centos-swap/</link><pubDate>Thu, 19 Sep 2019 00:02:26 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/09/19/centos-swap/</guid><description>1 2 3 4 5 cd / fallocate -l 1G swapfile chmod 600 swapfile mkswap swapfile swapon swapfile 如果执行 swapon 的时候，提示 swapon failed: Invalid argument 则把 fallocate -l 2G swapfile 替换为 dd if=/dev/zero of=/swapfile count=4096 bs=1MiB 1 2 3 4 5 cd / dd if=/dev/zero of=/swapfile count=1024 bs=1MiB chmod 600 swapfile mkswap swapfile swapon swapfile 参考： https://blog.csdn.net/zstack_org/article/details/53258588</description></item><item><title>Docker 在不重启容器的情况下重新加载 PHP-FPM 配置</title><link>https://schaepher.github.io/2019/08/30/docker-reload-php-fpm/</link><pubDate>Fri, 30 Aug 2019 10:10:40 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/08/30/docker-reload-php-fpm/</guid><description>执行：pkill -o -USR2 php-fpm https://stackoverflow.com/questions/37806188/how-to-restart-php-fpm-inside-a-docker-container For me PID 1 is not always correct (especially after killing it once). What helps is pkill -o -USR2 php-fpm, because the option -o searches for the oldest process (the master) and kills it.</description></item><item><title>CentOS7 读取 NTFS 格式硬盘</title><link>https://schaepher.github.io/2019/08/13/centos-ntfs/</link><pubDate>Tue, 13 Aug 2019 13:39:28 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/08/13/centos-ntfs/</guid><description>查看磁盘 fdisk -l 挂载 安装支持程序： 1 2 3 yum install -y ntfs-3g mkdir /mnt/hd mount -t ntfs /dev/sdb /mnt/hd 格式化磁盘 1 2 yum install -y ntfs-3g ntfsprogs mkntfs -F --fast --label myDisk /dev/sdb 从源码安装 https://www.tuxera.com/community/open-source-ntfs-3g/ https://blog.csdn.net/qiushisoftware/article/details/79520869</description></item><item><title>Bash 脚本长参数（getopts）</title><link>https://schaepher.github.io/2019/08/08/bash-params-getopts/</link><pubDate>Thu, 08 Aug 2019 19:50:30 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/08/08/bash-params-getopts/</guid><description>在脚本里面使用 getopts 获取参数。 示例 test2.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #!/bin/bash function main() { local OPTIND</description></item></channel></rss>