<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Docker - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/docker/</link><description>Docker - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>schaepher@outlook.com (Schaepher)</managingEditor><webMaster>schaepher@outlook.com (Schaepher)</webMaster><lastBuildDate>Tue, 15 Oct 2019 13:21:44 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/docker/" rel="self" type="application/rss+xml"/><item><title>Docker 镜像拉取失败的几种解决方法</title><link>https://schaepher.github.io/2019/10/15/docker-registry/</link><pubDate>Tue, 15 Oct 2019 13:21:44 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/15/docker-registry/</guid><description>方法总览： 国内源 nc + hosts Nginx 代理（需要 VPS） 官方 registry（需要 VPS，可缓存镜像） JFrog Artifactory（需要 VPS，可缓存镜像，需</description></item><item><title>Docker Compose</title><link>https://schaepher.github.io/2019/10/11/docker-series-e2/</link><pubDate>Fri, 11 Oct 2019 10:22:28 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/10/11/docker-series-e2/</guid><description>Docker Compose 是用来做什么的 最直接的就是把原先要在命令行跑容器所需的参数整合到一个文件（docker-compose.yaml）里面，组织起来。这样就</description></item><item><title>Docker 介绍</title><link>https://schaepher.github.io/2019/09/19/docker-series-e1/</link><pubDate>Thu, 19 Sep 2019 19:32:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/09/19/docker-series-e1/</guid><description>Docker 是用来干嘛的？ 帮助开发者和系统管理员使用容器开发、部署和运行应用。 对于开发者而言，最直观的感受就是原先我们要跑起来一个已有项目，必须装一大</description></item><item><title>Docker 在不重启容器的情况下重新加载 PHP-FPM 配置</title><link>https://schaepher.github.io/2019/08/30/docker-reload-php-fpm/</link><pubDate>Fri, 30 Aug 2019 10:10:40 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2019/08/30/docker-reload-php-fpm/</guid><description>执行：pkill -o -USR2 php-fpm https://stackoverflow.com/questions/37806188/how-to-restart-php-fpm-inside-a-docker-container For me PID 1 is not always correct (especially after killing it once). What helps is pkill -o -USR2 php-fpm, because the option -o searches for the oldest process (the master) and kills it.</description></item><item><title>Dockerfile</title><link>https://schaepher.github.io/2018/12/09/dockerfile/</link><pubDate>Sun, 09 Dec 2018 12:46:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2018/12/09/dockerfile/</guid><description>Dockerfile 的官方文档：https://docs.docker.com/engine/reference/builder/ 1 示例 当你想要一个镜像，但它</description></item><item><title>一些国内镜像源设置</title><link>https://schaepher.github.io/2018/08/12/china-mirror/</link><pubDate>Sun, 12 Aug 2018 20:44:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2018/08/12/china-mirror/</guid><description>NPM npm config set registry https://registry.npm.taobao.org 换回来： npm config set registry https://registry.npmjs.org 如果只想生效一次： npm --registry=https://registry.npm.taobao.org install xxxxx Docker 编辑文件： C:\Users\chensf1\.docker\daemon.json 在 registry-mirrors 里添加 https://registry.docker-cn.com</description></item></channel></rss>