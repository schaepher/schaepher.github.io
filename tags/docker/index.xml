<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Docker - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/docker/</link><description>Docker - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 15 Oct 2019 13:21:44 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/docker/" rel="self" type="application/rss+xml"/><item><title>Docker 镜像拉取失败的几种解决方法</title><link>https://schaepher.github.io/2019/10/15/docker-registry/</link><pubDate>Tue, 15 Oct 2019 13:21:44 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2019/10/15/docker-registry/</guid><description><![CDATA[<p>方法总览：</p>
<ul>
<li>国内源</li>
<li>nc + hosts</li>
<li>Nginx 代理（需要 VPS）</li>
<li>官方 registry（需要 VPS，可缓存镜像）</li>
<li>JFrog Artifactory（需要 VPS，可缓存镜像，需要许可证）</li>
</ul>
<!-- more -->
<h2 id="docker-拉取镜像的流程">Docker 拉取镜像的流程</h2>
<p>见官方：<br>
<a href="https://docs.docker.com/registry/spec/auth/token/" target="_blank" rel="noopener noreffer ">https://docs.docker.com/registry/spec/auth/token/</a></p>]]></description></item><item><title>Docker Compose</title><link>https://schaepher.github.io/2019/10/11/docker-series-e2/</link><pubDate>Fri, 11 Oct 2019 10:22:28 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2019/10/11/docker-series-e2/</guid><description><![CDATA[<h2 id="docker-compose-是用来做什么的">Docker Compose 是用来做什么的</h2>
<ol>
<li>最直接的就是把原先要在命令行跑容器所需的参数整合到一个文件（docker-compose.yaml）里面，组织起来。这样就不用怕忘记某个参数了。</li>
<li>可以使用一行简单的命令（docker-compose）同时启动（up）、重启（restart）、关闭（stop）多个服务。</li>
</ol>
<p>开发和测试环境使用另外安装的 <code>docker-compose</code> 命令，单机的生产环境也可用。<br>
生产环境的集群如果是 Docker Swarm，则使用 Docker 自带的 <code>docker stack deploy</code> 。</p>]]></description></item><item><title>Docker 介绍</title><link>https://schaepher.github.io/2019/09/19/docker-series-e1/</link><pubDate>Thu, 19 Sep 2019 19:32:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2019/09/19/docker-series-e1/</guid><description><![CDATA[<h2 id="docker-是用来干嘛的">Docker 是用来干嘛的？</h2>
<p>帮助开发者和系统管理员使用容器开发、部署和运行应用。</p>
<p>对于开发者而言，最直观的感受就是原先我们要跑起来一个已有项目，必须装一大堆依赖。<br>
在没有 Docker 的时候，可以有两种方式：</p>]]></description></item><item><title>Docker 在不重启容器的情况下重新加载 PHP-FPM 配置</title><link>https://schaepher.github.io/2019/08/30/docker-reload-php-fpm/</link><pubDate>Fri, 30 Aug 2019 10:10:40 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2019/08/30/docker-reload-php-fpm/</guid><description><![CDATA[<p>执行：<code>pkill -o -USR2 php-fpm</code></p>
<blockquote>
<p><a href="https://stackoverflow.com/questions/37806188/how-to-restart-php-fpm-inside-a-docker-container" target="_blank" rel="noopener noreffer ">https://stackoverflow.com/questions/37806188/how-to-restart-php-fpm-inside-a-docker-container</a><br>
For me PID 1 is not always correct (especially after killing it once). What helps is <code>pkill -o -USR2 php-fpm</code>, because the option -o searches for the oldest process (the master) and kills it.</p></blockquote>]]></description></item><item><title>Dockerfile</title><link>https://schaepher.github.io/2018/12/09/dockerfile/</link><pubDate>Sun, 09 Dec 2018 12:46:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2018/12/09/dockerfile/</guid><description><![CDATA[<p>Dockerfile 的官方文档：<a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener noreffer ">https://docs.docker.com/engine/reference/builder/</a></p>
<h1 id="1-示例">1 示例</h1>
<p>当你想要一个镜像，但它没有办法满足你的所有要求时，就得在它的基础上做一些定制化的修改。此时就得用到 Dockerfile 。</p>
<p>你有两种选择：一种是获取这个镜像的原始 Dockerfile 文件，并在上面修改，从头开始构建镜像；另一种是直接指定已存在的镜像，并添加内容。</p>]]></description></item><item><title>一些国内镜像源设置</title><link>https://schaepher.github.io/2018/08/12/china-mirror/</link><pubDate>Sun, 12 Aug 2018 20:44:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2018/08/12/china-mirror/</guid><description><![CDATA[<h2 id="npm">NPM</h2>
<p><code>npm config set registry https://registry.npm.taobao.org</code></p>
<p>换回来：</p>
<p><code>npm config set registry https://registry.npmjs.org</code></p>
<p>如果只想生效一次：</p>
<p><code>npm --registry=https://registry.npm.taobao.org install xxxxx</code></p>
<h2 id="docker">Docker</h2>
<p>编辑文件： <code>C:\Users\chensf1\.docker\daemon.json</code></p>
<p>在 <code>registry-mirrors</code> 里添加 <code>https://registry.docker-cn.com</code>，如下：</p>]]></description></item></channel></rss>