<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Memcache - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/memcache/</link><description>Memcache - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>schaepher@outlook.com (Schaepher)</managingEditor><webMaster>schaepher@outlook.com (Schaepher)</webMaster><lastBuildDate>Tue, 24 Mar 2020 20:12:00 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/memcache/" rel="self" type="application/rss+xml"/><item><title>Memcached Redis 字符串存储容量上限</title><link>https://schaepher.github.io/2020/03/24/memcached-redis-memory/</link><pubDate>Tue, 24 Mar 2020 20:12:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2020/03/24/memcached-redis-memory/</guid><description>在 Memcached 和 Redis 的比较中，总会提到它们存储字符串的区别。 Memcached 默认上限是 1MB （最大上限是 1GB），而 Redis 是 512MB 。 但是这样就够了吗？我们很自然的会对此提出一些问</description></item><item><title>内存分配器</title><link>https://schaepher.github.io/2020/03/23/memory-allocation/</link><pubDate>Mon, 23 Mar 2020 23:46:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2020/03/23/memory-allocation/</guid><description>传统的内存分配和现代的内存分配 传统的内存分配是在需要内存的时候使用 malloc() 函数直接向操作系统申请内存，在释放内存的时候用 free() 把内存还给操作系统。 malloc =</description></item></channel></rss>