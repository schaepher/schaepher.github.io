<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Promethues - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/promethues/</link><description>Promethues - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 17 Nov 2021 20:09:00 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/promethues/" rel="self" type="application/rss+xml"/><item><title>Promethues Windows 温度监控</title><link>https://schaepher.github.io/2021/11/17/promethues-windows-temp/</link><pubDate>Wed, 17 Nov 2021 20:09:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2021/11/17/promethues-windows-temp/</guid><description><![CDATA[<p><a href="https://github.com/openhardwaremonitor/openhardwaremonitor" target="_blank" rel="noopener noreffer ">https://github.com/openhardwaremonitor/openhardwaremonitor</a></p>
<p><a href="https://stackoverflow.com/questions/3262603/accessing-cpu-temperature-in-python" target="_blank" rel="noopener noreffer ">https://stackoverflow.com/questions/3262603/accessing-cpu-temperature-in-python</a></p>
<p>collector/coretemp.go</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-go">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="c1">// https://github.com/prometheus-community/windows_exporter/pull/727</span>
</span></span><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">collector</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;bytes&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;strings&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;syscall&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;unsafe&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="s">&#34;github.com/prometheus/client_golang/prometheus&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;github.com/prometheus/common/log&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;golang.org/x/sys/windows&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// technical documentation for the shared memory structure: https://www.alcpu.com/CoreTemp/developers.html</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="nx">kernel32</span>         <span class="p">=</span> <span class="nx">syscall</span><span class="p">.</span><span class="nf">NewLazyDLL</span><span class="p">(</span><span class="s">&#34;KERNEL32.dll&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">msvcrt</span>           <span class="p">=</span> <span class="nx">syscall</span><span class="p">.</span><span class="nf">NewLazyDLL</span><span class="p">(</span><span class="s">&#34;msvcrt.dll&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">createMutexW</span>     <span class="p">=</span> <span class="nx">kernel32</span><span class="p">.</span><span class="nf">NewProc</span><span class="p">(</span><span class="s">&#34;CreateMutexW&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">releaseMutex</span>     <span class="p">=</span> <span class="nx">kernel32</span><span class="p">.</span><span class="nf">NewProc</span><span class="p">(</span><span class="s">&#34;ReleaseMutex&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">openFileMappingW</span> <span class="p">=</span> <span class="nx">kernel32</span><span class="p">.</span><span class="nf">NewProc</span><span class="p">(</span><span class="s">&#34;OpenFileMappingW&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">closeHandle</span>      <span class="p">=</span> <span class="nx">kernel32</span><span class="p">.</span><span class="nf">NewProc</span><span class="p">(</span><span class="s">&#34;CloseHandle&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">mapViewOfFile</span>    <span class="p">=</span> <span class="nx">kernel32</span><span class="p">.</span><span class="nf">NewProc</span><span class="p">(</span><span class="s">&#34;MapViewOfFile&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">unmapViewOfFile</span>  <span class="p">=</span> <span class="nx">kernel32</span><span class="p">.</span><span class="nf">NewProc</span><span class="p">(</span><span class="s">&#34;UnmapViewOfFile&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">memcpy_s</span>         <span class="p">=</span> <span class="nx">msvcrt</span><span class="p">.</span><span class="nf">NewProc</span><span class="p">(</span><span class="s">&#34;memcpy_s&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">init</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">registerCollector</span><span class="p">(</span><span class="s">&#34;coretemp&#34;</span><span class="p">,</span> <span class="nx">NewCoreTempCollector</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// A coreTempCollector is a Prometheus collector for CoreTemp shared data metrics</span>
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">coreTempCollector</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Temperature</span> <span class="o">*</span><span class="nx">prometheus</span><span class="p">.</span><span class="nx">Desc</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Load</span>        <span class="o">*</span><span class="nx">prometheus</span><span class="p">.</span><span class="nx">Desc</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// NewCoreTempCollector ...</span>
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">NewCoreTempCollector</span><span class="p">()</span> <span class="p">(</span><span class="nx">Collector</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">const</span> <span class="nx">subsystem</span> <span class="p">=</span> <span class="s">&#34;coretemp&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="o">&amp;</span><span class="nx">coreTempCollector</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="nx">Temperature</span><span class="p">:</span> <span class="nx">prometheus</span><span class="p">.</span><span class="nf">NewDesc</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="nx">prometheus</span><span class="p">.</span><span class="nf">BuildFQName</span><span class="p">(</span><span class="nx">Namespace</span><span class="p">,</span> <span class="nx">subsystem</span><span class="p">,</span> <span class="s">&#34;temperature_celsius&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">			<span class="s">&#34;(Temperature)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&#34;name&#34;</span><span class="p">,</span> <span class="s">&#34;core&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">			<span class="kc">nil</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="p">),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="nx">Load</span><span class="p">:</span> <span class="nx">prometheus</span><span class="p">.</span><span class="nf">NewDesc</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="nx">prometheus</span><span class="p">.</span><span class="nf">BuildFQName</span><span class="p">(</span><span class="nx">Namespace</span><span class="p">,</span> <span class="nx">subsystem</span><span class="p">,</span> <span class="s">&#34;load&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">			<span class="s">&#34;(Load)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&#34;name&#34;</span><span class="p">,</span> <span class="s">&#34;core&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">			<span class="kc">nil</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="p">),</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span> <span class="kc">nil</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Collect sends the metric values for each metric</span>
</span></span><span class="line"><span class="cl"><span class="c1">// to the provided prometheus Metric channel.</span>
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">coreTempCollector</span><span class="p">)</span> <span class="nf">Collect</span><span class="p">(</span><span class="nx">ctx</span> <span class="o">*</span><span class="nx">ScrapeContext</span><span class="p">,</span> <span class="nx">ch</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="nx">prometheus</span><span class="p">.</span><span class="nx">Metric</span><span class="p">)</span> <span class="kt">error</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">desc</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">c</span><span class="p">.</span><span class="nf">collect</span><span class="p">(</span><span class="nx">ch</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Error</span><span class="p">(</span><span class="s">&#34;failed collecting coretemp metrics:&#34;</span><span class="p">,</span> <span class="nx">desc</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nx">err</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="kc">nil</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">coreTempCollector</span><span class="p">)</span> <span class="nf">collect</span><span class="p">(</span><span class="nx">ch</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="nx">prometheus</span><span class="p">.</span><span class="nx">Metric</span><span class="p">)</span> <span class="p">(</span><span class="o">*</span><span class="nx">prometheus</span><span class="p">.</span><span class="nx">Desc</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">s</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nf">readCoreTempSharedData</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">nil</span><span class="p">,</span> <span class="nx">err</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">cpuName</span> <span class="o">:=</span> <span class="nx">s</span><span class="p">.</span><span class="nf">GetCPUName</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="nb">uint32</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">s</span><span class="p">.</span><span class="nx">CoreCount</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="c1">// convert to celsius if internal unit is fahrenheit</span>
</span></span><span class="line"><span class="cl">		<span class="nx">temp</span> <span class="o">:=</span> <span class="nb">float64</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">Temp</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">s</span><span class="p">.</span><span class="nx">IsFahrenheit</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">temp</span> <span class="p">=</span> <span class="p">(</span><span class="nx">temp</span> <span class="o">-</span> <span class="mi">32</span><span class="p">)</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">/</span> <span class="mi">9</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="nx">ch</span> <span class="o">&lt;-</span> <span class="nx">prometheus</span><span class="p">.</span><span class="nf">MustNewConstMetric</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="nx">c</span><span class="p">.</span><span class="nx">Temperature</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">prometheus</span><span class="p">.</span><span class="nx">GaugeValue</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">temp</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">cpuName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">&#34;%d&#34;</span><span class="p">,</span> <span class="nx">i</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">		<span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="nx">ch</span> <span class="o">&lt;-</span> <span class="nx">prometheus</span><span class="p">.</span><span class="nf">MustNewConstMetric</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="nx">c</span><span class="p">.</span><span class="nx">Load</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">prometheus</span><span class="p">.</span><span class="nx">GaugeValue</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nb">float64</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">Load</span><span class="p">[</span><span class="nx">i</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">			<span class="nx">cpuName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">			<span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">&#34;%d&#34;</span><span class="p">,</span> <span class="nx">i</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">		<span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">nil</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// read memory from CoreTemp to fetch cpu data</span>
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">readCoreTempSharedData</span><span class="p">()</span> <span class="p">(</span><span class="o">*</span><span class="nx">coreTempSharedData</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">mutexName</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">windows</span><span class="p">.</span><span class="nf">UTF16PtrFromString</span><span class="p">(</span><span class="s">&#34;CoreTempMutexObject&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">mutexObject</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">createMutexW</span><span class="p">.</span><span class="nf">Call</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">uintptr</span><span class="p">(</span><span class="nx">unsafe</span><span class="p">.</span><span class="nf">Pointer</span><span class="p">(</span><span class="nx">mutexName</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">nil</span><span class="p">,</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Errorf</span><span class="p">(</span><span class="s">&#34;CoreTempMutexObject not found. make sure Core Temp is running&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="nx">releaseMutex</span><span class="p">.</span><span class="nf">Call</span><span class="p">(</span><span class="nx">mutexObject</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">mappingName</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">windows</span><span class="p">.</span><span class="nf">UTF16PtrFromString</span><span class="p">(</span><span class="s">&#34;CoreTempMappingObject&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">mappingObject</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">CoreTempMappingObject</span><span class="p">.</span><span class="nf">Call</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">uintptr</span><span class="p">(</span><span class="nx">unsafe</span><span class="p">.</span><span class="nf">Pointer</span><span class="p">(</span><span class="nx">mappingName</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">mappingObject</span> <span class="o">==</span> <span class="nb">uintptr</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">nil</span><span class="p">,</span> <span class="nx">err</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="nx">closeHandle</span><span class="p">.</span><span class="nf">Call</span><span class="p">(</span><span class="nx">mappingObject</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">mapView</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">mapViewOfFile</span><span class="p">.</span><span class="nf">Call</span><span class="p">(</span><span class="nx">mappingObject</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">mapView</span> <span class="o">==</span> <span class="nb">uintptr</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">nil</span><span class="p">,</span> <span class="nx">err</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="nx">unmapViewOfFile</span><span class="p">.</span><span class="nf">Call</span><span class="p">(</span><span class="nx">mapView</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">data</span> <span class="o">:=</span> <span class="nx">coreTempSharedData</span><span class="p">{}</span>
</span></span><span class="line"><span class="cl">	<span class="nx">_</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="nx">memcpy_s</span><span class="p">.</span><span class="nf">Call</span><span class="p">(</span><span class="nb">uintptr</span><span class="p">(</span><span class="nx">unsafe</span><span class="p">.</span><span class="nf">Pointer</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">data</span><span class="p">)),</span> <span class="mh">0xa80</span><span class="p">,</span> <span class="nx">mapView</span><span class="p">,</span> <span class="mh">0xa80</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="o">&amp;</span><span class="nx">data</span><span class="p">,</span> <span class="kc">nil</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">coreTempSharedData</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Load</span>           <span class="p">[</span><span class="mi">256</span><span class="p">]</span><span class="kt">uint32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">TjMax</span>          <span class="p">[</span><span class="mi">128</span><span class="p">]</span><span class="kt">uint32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">CoreCount</span>      <span class="kt">uint32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">CPUCount</span>       <span class="kt">uint32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Temp</span>           <span class="p">[</span><span class="mi">256</span><span class="p">]</span><span class="kt">float32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">VID</span>            <span class="kt">float32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">CPUSpeed</span>       <span class="kt">float32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">FSBSpeed</span>       <span class="kt">float32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">Multipier</span>      <span class="kt">float32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">CPUName</span>        <span class="p">[</span><span class="mi">100</span><span class="p">]</span><span class="kt">byte</span>
</span></span><span class="line"><span class="cl">	<span class="nx">IsFahrenheit</span>   <span class="kt">bool</span> <span class="c1">// if true, true, the temperature is reported in Fahrenheit</span>
</span></span><span class="line"><span class="cl">	<span class="nx">IsDeltaToTjMax</span> <span class="kt">bool</span> <span class="c1">// if true, the temperature reported represents the distance from TjMax</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="p">(</span><span class="nx">s</span> <span class="o">*</span><span class="nx">coreTempSharedData</span><span class="p">)</span> <span class="nf">GetCPUName</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">n</span> <span class="o">:=</span> <span class="nx">bytes</span><span class="p">.</span><span class="nf">IndexByte</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">CPUName</span><span class="p">[:],</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">TrimSpace</span><span class="p">(</span><span class="nb">string</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">CPUName</span><span class="p">[:</span><span class="nx">n</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-yaml">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">collectors</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="l">coretemp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">collector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">service</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">services-where</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Name=&#39;windows_exporter&#39;&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">telemetry</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">addr</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;:9092&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/metrics&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">max-requests</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">scrape</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">timeout-margin</span><span class="p">:</span><span class="w"> </span><span class="m">0.5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">log</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">level</span><span class="p">:</span><span class="w"> </span><span class="l">warn</span></span></span></code></pre></div></div>]]></description></item></channel></rss>