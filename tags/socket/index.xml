<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Socket - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/socket/</link><description>Socket - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 02 Jul 2020 12:56:00 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/socket/" rel="self" type="application/rss+xml"/><item><title>TCP 协议和 TCP Socket</title><link>https://schaepher.github.io/2020/07/02/tcp-socket/</link><pubDate>Thu, 02 Jul 2020 12:56:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2020/07/02/tcp-socket/</guid><description><![CDATA[<p>TCP 位于计算机网络七层模型中的传输层。 TCP 协议在操作系统层面实现，实现方式为 TCP Socket。</p>
<blockquote>
<p>除了 TCP Socket 之外，还有同样是<strong>主要</strong>用于主机间进程通信的 UDP Socket 和用于本机进程间通信的 Unix Domain Socket。它们提供的接口是一样的，但底层实现细节不一致。本文主要内容是 TCP Socket ，因此以下默认 Socket 都是表示 TCP Socket。</p>]]></description></item><item><title>进程间通信（IPC，Inter-process Communication）</title><link>https://schaepher.github.io/2020/06/27/ipc/</link><pubDate>Sat, 27 Jun 2020 10:08:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2020/06/27/ipc/</guid><description>&lt;p>当我们开始执行一个程序时，会创建一个进程。这个进程可能需要与其他进程通信。例如向操作系统发送一条消息，让它展示给用户。&lt;/p>
&lt;p>如果只是在自己的机器上通信，那就不有趣了。我们还想跟其他机器的进程通信，比如聊天应用就涉及到了多台机器。这种跨多台机器（主机）的通信通过套接字（Socket）实现。&lt;/p></description></item></channel></rss>