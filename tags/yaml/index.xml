<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>YAML - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/yaml/</link><description>YAML - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 11 Oct 2019 10:22:28 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/yaml/" rel="self" type="application/rss+xml"/><item><title>Docker Compose</title><link>https://schaepher.github.io/2019/10/11/docker-series-e2/</link><pubDate>Fri, 11 Oct 2019 10:22:28 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2019/10/11/docker-series-e2/</guid><description><![CDATA[<h2 id="docker-compose-是用来做什么的">Docker Compose 是用来做什么的</h2>
<ol>
<li>最直接的就是把原先要在命令行跑容器所需的参数整合到一个文件（docker-compose.yaml）里面，组织起来。这样就不用怕忘记某个参数了。</li>
<li>可以使用一行简单的命令（docker-compose）同时启动（up）、重启（restart）、关闭（stop）多个服务。</li>
</ol>
<p>开发和测试环境使用另外安装的 <code>docker-compose</code> 命令，单机的生产环境也可用。<br>
生产环境的集群如果是 Docker Swarm，则使用 Docker 自带的 <code>docker stack deploy</code> 。</p>]]></description></item></channel></rss>