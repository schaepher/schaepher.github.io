<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>树 - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/%E6%A0%91/</link><description>树 - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>schaepher@outlook.com (Schaepher)</managingEditor><webMaster>schaepher@outlook.com (Schaepher)</webMaster><lastBuildDate>Sat, 11 Jun 2022 12:26:00 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/%E6%A0%91/" rel="self" type="application/rss+xml"/><item><title>红黑树</title><link>https://schaepher.github.io/2022/06/11/red-black-tree/</link><pubDate>Sat, 11 Jun 2022 12:26:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2022/06/11/red-black-tree/</guid><description>2-3 树和 2-3-4 树统称为 B-树（Balanced Tree）。 为什么不直接使用 B-树？ 既然以 2-3 树和 2-3-4 树都可以用来转换成红黑树，为什么最终使用 2-3-4 树的转换</description></item><item><title>2-3树 —— 理解红黑树的捷径</title><link>https://schaepher.github.io/2022/06/02/2-3-tree/</link><pubDate>Thu, 02 Jun 2022 12:26:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2022/06/02/2-3-tree/</guid><description>如果从先易后难的顺序介绍各种树，那么红黑树必然放在 AVL 树后面。但在红黑树之前，还有一种名为 2-3 树的平衡二叉树。2-3 树理解起来比红黑树容易很多，</description></item><item><title>打印二叉树</title><link>https://schaepher.github.io/2022/06/01/print-binary-tree/</link><pubDate>Wed, 01 Jun 2022 18:50:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2022/06/01/print-binary-tree/</guid><description>背景 之前在了解二叉树旋转的时候，为了方便查看中间状态，就写了个以树状形式打印二叉树的函数。 起初是使用二叉树中序遍历的结果展开的方式，简单但打</description></item><item><title>平衡二叉树</title><link>https://schaepher.github.io/2022/05/30/balanced-binary-tree/</link><pubDate>Mon, 30 May 2022 15:15:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2022/05/30/balanced-binary-tree/</guid><description>上一篇把树旋转了解清楚，是为这一篇平衡二叉树准备的。 平衡二叉树，就是在二叉树的基础上加上一个条件：对于任意节点，左子树和右子树的树高之差不超</description></item><item><title>因为一句话，秒懂二叉树旋转</title><link>https://schaepher.github.io/2022/05/11/tree-rotation/</link><pubDate>Wed, 11 May 2022 12:30:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2022/05/11/tree-rotation/</guid><description>事情要从某天晚上买夜宵说起。买了香肠拿着吃，想着多年来一直没搞懂的树旋转是不是应该看看，就点进某百科。 树旋转是在二叉树中的一种子树调整操作，</description></item></channel></rss>