<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>源码 - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/%E6%BA%90%E7%A0%81/</link><description>源码 - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 30 Mar 2020 23:25:00 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/%E6%BA%90%E7%A0%81/" rel="self" type="application/rss+xml"/><item><title>【PHP 源码】PHP 函数调用</title><link>https://schaepher.github.io/2020/03/30/php-function-call/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2020/03/30/php-function-call/</guid><description><![CDATA[<h2 id="想法">想法</h2>
<p>我以前对于 C 语言的印象是有很强的确定性，而 PHP 在执行的时候会被翻译为 C 语言执行，所以一直很好奇 PHP 怎么调用底层函数。</p>
<p>换句话说就是已知函数名字的情况下如何调用 C 语言中对应名字的函数？</p>]]></description></item><item><title>【PHP 源码】PHP 函数注册</title><link>https://schaepher.github.io/2020/03/30/php-function-regist/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2020/03/30/php-function-regist/</guid><description><![CDATA[<h1 id="函数的注册">函数的注册</h1>
<p>调用顺序为：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">- main
</span></span><span class="line"><span class="cl">-- php_cli_startup
</span></span><span class="line"><span class="cl">--- php_module_startup
</span></span><span class="line"><span class="cl">---- zend_startup
</span></span><span class="line"><span class="cl">----- zend_startup_builtin_function
</span></span><span class="line"><span class="cl">------ zend_register_module_ex(*module)
</span></span><span class="line"><span class="cl">------- zend_register_functions(module-&gt;functions)</span></span></code></pre></div></div>
<!-- more -->
<p><code>sapi/cli/php_cli.c</code></p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-c">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="n">sapi_module_struct</span> <span class="o">*</span><span class="n">sapi_module</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">cli_sapi_module</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    
</span></span><span class="line"><span class="cl">    <span class="cm">/* startup after we get the above ini override se we get things right */</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">sapi_module</span><span class="o">-&gt;</span><span class="nf">startup</span><span class="p">(</span><span class="n">sapi_module</span><span class="p">)</span> <span class="o">==</span> <span class="n">FAILURE</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">exit_status</span> <span class="o">=</span> <span class="nf">do_cli</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span></span></span></code></pre></div></div>
<p><code>main/SAPI.h</code></p>]]></description></item><item><title>PHP sort 源码</title><link>https://schaepher.github.io/2020/03/30/php-sort/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2020/03/30/php-sort/</guid><description><![CDATA[<p><code>ext/standard/array.c</code></p>
<!-- more -->
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-c">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cm">/* {{{ proto bool sort(array &amp;array_arg [, int sort_flags])
</span></span></span><span class="line"><span class="cl"><span class="cm">   Sort an array */</span>
</span></span><span class="line"><span class="cl"><span class="nf">PHP_FUNCTION</span><span class="p">(</span><span class="n">sort</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">zval</span> <span class="o">*</span><span class="n">array</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">zend_long</span> <span class="n">sort_type</span> <span class="o">=</span> <span class="n">PHP_SORT_REGULAR</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">compare_func_t</span> <span class="n">cmp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">ZEND_PARSE_PARAMETERS_START</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">Z_PARAM_ARRAY_EX</span><span class="p">(</span><span class="n">array</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="n">Z_PARAM_OPTIONAL</span>
</span></span><span class="line"><span class="cl">		<span class="nf">Z_PARAM_LONG</span><span class="p">(</span><span class="n">sort_type</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nf">ZEND_PARSE_PARAMETERS_END_EX</span><span class="p">(</span><span class="n">RETURN_FALSE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">cmp</span> <span class="o">=</span> <span class="nf">php_get_data_compare_func</span><span class="p">(</span><span class="n">sort_type</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>  <span class="c1">// 根据 sort_flags 选择比较函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="nf">zend_hash_sort</span><span class="p">(</span><span class="nf">Z_ARRVAL_P</span><span class="p">(</span><span class="n">array</span><span class="p">),</span> <span class="n">cmp</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="n">FAILURE</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">RETURN_FALSE</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="n">RETURN_TRUE</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<p>接下来找 zend_hash_sort 。</p>
<p><code>Zend/zend_hash.h</code></p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-c">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#define zend_hash_sort(ht, compare_func, renumber) \
</span></span></span><span class="line"><span class="cl"><span class="cp">	zend_hash_sort_ex(ht, zend_sort, compare_func, renumber)</span></span></span></code></pre></div></div>
<p>用于排序的算法是 zend_sort 。</p>]]></description></item><item><title>阅读 PHP 源码</title><link>https://schaepher.github.io/2020/03/30/read-php-src/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>xxxx</author><guid>https://schaepher.github.io/2020/03/30/read-php-src/</guid><description><![CDATA[<p>从数组入手。</p>
<p>数组相关函数是 PHP 扩展的一部分，扩展名为 <code>standard</code>，执行 <code>php -m</code> 可以看到该扩展。</p>
<p>该扩展的源码在 PHP 源码包的 <code>ext/standard</code> ，其中数组相关函数的定义在 <code>ext/standard/array.c</code> 。</p>]]></description></item></channel></rss>