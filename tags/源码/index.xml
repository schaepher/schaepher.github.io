<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>源码 - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/%E6%BA%90%E7%A0%81/</link><description>源码 - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>schaepher@outlook.com (Schaepher)</managingEditor><webMaster>schaepher@outlook.com (Schaepher)</webMaster><lastBuildDate>Mon, 30 Mar 2020 23:25:00 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/%E6%BA%90%E7%A0%81/" rel="self" type="application/rss+xml"/><item><title>【PHP 源码】PHP 函数调用</title><link>https://schaepher.github.io/2020/03/30/php-function-call/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2020/03/30/php-function-call/</guid><description>想法 我以前对于 C 语言的印象是有很强的确定性，而 PHP 在执行的时候会被翻译为 C 语言执行，所以一直很好奇 PHP 怎么调用底层函数。 换句话说就是已知函数名字</description></item><item><title>【PHP 源码】PHP 函数注册</title><link>https://schaepher.github.io/2020/03/30/php-function-regist/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2020/03/30/php-function-regist/</guid><description>函数的注册 调用顺序为： 1 2 3 4 5 6 7 - main -- php_cli_startup --- php_module_startup ---- zend_startup ----- zend_startup_builtin_function ------ zend_register_module_ex(*module) ------- zend_register_functions(module-&amp;gt;functions) sapi/cli/php_cli.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 int main(int argc, char *argv[]) { // ... sapi_module_struct *sapi_module = &amp;amp;cli_sapi_module; // ... /* startup after we get the</description></item><item><title>PHP sort 源码</title><link>https://schaepher.github.io/2020/03/30/php-sort/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2020/03/30/php-sort/</guid><description>ext/standard/array.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* {{{ proto bool sort(array &amp;amp;array_arg [, int sort_flags]) Sort an array */ PHP_FUNCTION(sort) { zval *array; zend_long sort_type = PHP_SORT_REGULAR; compare_func_t cmp; ZEND_PARSE_PARAMETERS_START(1, 2) Z_PARAM_ARRAY_EX(array, 0, 1) Z_PARAM_OPTIONAL Z_PARAM_LONG(sort_type) ZEND_PARSE_PARAMETERS_END_EX(RETURN_FALSE); cmp = php_get_data_compare_func(sort_type, 0); // 根据 sort_flags 选择比较函数 if (zend_hash_sort(Z_ARRVAL_P(array), cmp,</description></item><item><title>阅读 PHP 源码</title><link>https://schaepher.github.io/2020/03/30/read-php-src/</link><pubDate>Mon, 30 Mar 2020 23:25:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/2020/03/30/read-php-src/</guid><description>从数组入手。 数组相关函数是 PHP 扩展的一部分，扩展名为 standard，执行 php -m 可以看到该扩展。 该扩展的源码在 PHP 源码包的 ext/standard ，其中数组相关函数的定</description></item></channel></rss>