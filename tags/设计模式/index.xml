<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>设计模式 - 标签 - Schaepher's Blog</title><link>https://schaepher.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>设计模式 - 标签 - Schaepher's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>schaepher@outlook.com (Schaepher)</managingEditor><webMaster>schaepher@outlook.com (Schaepher)</webMaster><lastBuildDate>Fri, 27 Mar 2020 01:05:00 +0000</lastBuildDate><atom:link href="https://schaepher.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" rel="self" type="application/rss+xml"/><item><title>设计模式</title><link>https://schaepher.github.io/drafts/design-patterns/</link><pubDate>Fri, 27 Mar 2020 01:05:00 +0000</pubDate><author>Schaepher</author><guid>https://schaepher.github.io/drafts/design-patterns/</guid><description>概念说明 在了解各种模式之前，要把自己代入一个基础库的开发者（库作者）的角度。 客户端： 使用库的人 主体： 实际实现功能的库类 代理模式（Proxy）</description></item></channel></rss>